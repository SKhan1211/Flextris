{"version":3,"sources":["webpack/bootstrap","./src/game.js","./src/grid.js","./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;;AAEA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACNnB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACzCnB;AAAA;AAAA;AAA0B;AACA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,QAAQ,O;;AAEpF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU,YAAY;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,K;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,6CAAI;;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mB;AACA;AACA,GAAG;;AAEH;AACA,CAAC,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","class Game {\n  constructor() {\n\n  }\n}\n\nexport default Game;","const colors = [\n  null,\n  \"#FF0D72\",\n  \"#0DC2FF\",\n  \"#0DFF72\",\n  \"#F538FF\",\n  \"#FF8E0D\",\n  \"#FFE138\",\n  \"#3877FF\",\n];\n\nclass Grid {\n  constructor(canvas, matrix, user, matrixGrid) {\n    this.color = \"#000000\"\n    this.canvas = canvas;\n    this.user = user;\n    this.matrix = matrix;\n    this.matrixGrid = matrixGrid;\n  }\n\n  paintGrid() {\n    const ctx = this.canvas.getContext(\"2d\");\n    ctx.fillStyle = this.color;\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawPiece(this.matrixGrid, { x: 0, y: 0 });\n    this.drawPiece(this.user.matrix, this.user.pos);\n  }\n\n  drawPiece(matrix, move) {\n    const ctx = this.canvas.getContext(\"2d\");\n    matrix.forEach((row, rowIdx) => {\n      row.forEach((col, colIdx) => {\n        if (col !== 0) {\n          ctx.fillStyle = colors[col];\n          ctx.fillRect((colIdx) + move.x, (rowIdx) + move.y, (1), (1));\n        }\n      })\n    })\n  }\n}\n\nexport default Grid;","import Grid from './grid';\nimport Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvas = document.getElementById('game-canvas');\n  canvas.height = 400;\n  canvas.width = 240;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.scale(20, 20);\n  let songIdx = 1;\n  let backgroundMusic = new Audio(`../assets/sound_effects/level1/TetrisA-${songIdx}.mp3`);  \n\n  const matrix = [\n    [0, 0, 0],\n    [1, 1, 1],\n    [0, 1, 0]\n  ];\n\n  // Clears layer when it completely fills up\n  let linesCleared = 0;\n  let level = 1;\n  document.getElementById(\"level\").innerText = level;\n  function gridClear() {\n    let rowCount = 1;\n    outer: for (let y = matrixGrid.length - 1; y > 0; --y) {\n      for (let x = 0; x < matrixGrid[y].length; ++x) {\n        if (matrixGrid[y][x] === 0) {\n          continue outer;\n        }\n      }\n\n      const row = matrixGrid.splice(y, 1)[0].fill(0);\n      matrixGrid.unshift(row);\n      ++y;\n\n      user.score += rowCount * 10;\n      let sfx2 = new Audio(\"../assets/sound_effects/Sfx/SFx2.mp3\");\n      sfx2.play();\n      rowCount *= 2;\n      linesCleared++;\n      if (linesCleared === 10) {\n        ++level;\n        linesCleared = 0;\n        document.getElementById(\"level\").innerText = level;\n      }\n    }\n  }\n\n  function createGrid(width, height) {\n    const grid = [];\n    while (height--) {\n      grid.push(new Array(width).fill(0));\n    }\n    return grid;\n  }\n\n  function collision(grid, user) {\n    const m = user.matrix;\n    const o = user.pos;\n    for (let y = 0; y < m.length; ++y) {\n      for (let x = 0; x < m[y].length; ++x) {\n        if (m[y][x] !== 0 &&\n          (grid[y + o.y] &&\n            grid[y + o.y][x + o.x]) !== 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  function combine(matrixGrid, user) {\n    user.matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          matrixGrid[y + user.pos.y][x + user.pos.x] = value;\n        }\n      });\n    });\n  }\n\n  let counter = 0;\n  let interval = 1000;\n  let oldTime = 0;\n\n  // Increases speed when down arrow is pressed\n  function userDown() {\n    user.pos.y += 1;\n    if (collision(matrixGrid, user)) {\n      user.pos.y -= 1;\n      combine(matrixGrid, user);\n      userReset();\n      gridClear();\n      addScore();\n    }\n    counter = 0;\n  }\n\n  // Handles moving pieces side to side on arrow button presses\n  function userMove(direction) {\n    user.pos.x += direction;\n    if (collision(matrixGrid, user)) {\n      user.pos.x -= direction;\n    }\n  }\n\n  // Helper method to rotate the pieces used with userRotate function\n  function rotate(matrixGrid, direction) {\n    for (let y = 0; y < matrixGrid.length; ++y) {\n      for (let x = 0; x < y; ++x) {\n        [\n          matrixGrid[x][y],\n          matrixGrid[y][x],\n        ] = [\n            matrixGrid[y][x],\n            matrixGrid[x][y],\n          ];\n      }\n    }\n\n    if (direction > 0) {\n      matrixGrid.forEach(row => row.reverse());\n    } else {\n      matrixGrid.reverse();\n    }\n  }\n\n  // Game pieces for our grid\n  function createPiece(type) {\n    if (type === 'I') {\n      return [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n      ];\n    } else if (type === 'L') {\n      return [\n        [0, 2, 0],\n        [0, 2, 0],\n        [0, 2, 2],\n      ];\n    } else if (type === 'J') {\n      return [\n        [0, 3, 0],\n        [0, 3, 0],\n        [3, 3, 0],\n      ];\n    } else if (type === 'O') {\n      return [\n        [4, 4],\n        [4, 4],\n      ];\n    } else if (type === 'Z') {\n      return [\n        [5, 5, 0],\n        [0, 5, 5],\n        [0, 0, 0],\n      ];\n    } else if (type === 'S') {\n      return [\n        [0, 6, 6],\n        [6, 6, 0],\n        [0, 0, 0],\n      ];\n    } else if (type === 'T') {\n      return [\n        [0, 7, 0],\n        [7, 7, 7],\n        [0, 0, 0],\n      ];\n    }\n  }\n\n  // Rotates the pieces when 'Q' or 'W' is pressed\n  function userRotate(direction) {\n    const pos = user.pos.x;\n    let offset = 1;\n    rotate(user.matrix, direction);\n    while (collision(matrixGrid, user)) {\n      user.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > user.matrix[0].length) {\n        rotate(user.matrix, -direction);\n        user.pos.x = pos;\n        return;\n      }\n    }\n  }\n\n  // Handles pausing the game\n  let isPaused = false;\n  function userPause() {\n    if (isPaused) {\n      isPaused = false;\n      updateGrid();\n      document.addEventListener(\"keydown\", keyPresses);\n      document.getElementsByClassName(\"pause-img\")[0].className = \"pause-img-hidden\"\n    } else {\n      isPaused = true;\n      document.removeEventListener(\"keydown\", keyPresses);\n      document.getElementsByClassName(\"pause-img-hidden\")[0].className = \"pause-img\"\n    }\n  }\n\n  // Event listener for pausing the game\n  document.addEventListener(\"keydown\", (event) => {\n    if (event.keyCode === 80) {\n      userPause();\n    }\n  })\n\n  function userReset() {\n    const pieces = 'TJLOSZI';\n    user.matrix = createPiece(pieces[pieces.length * Math.random() | 0]);\n    user.pos.y = 0;\n    user.pos.x = (matrixGrid[0].length / 2 | 0) -\n      (user.matrix[0].length / 2 | 0);\n\n    if (collision(matrixGrid, user)) {\n      matrixGrid.forEach((row) => row.fill(0));\n      user.score = 0;\n      addScore();\n      linesCleared = 0;\n      level = 1;\n      document.getElementById(\"level\").innerText = level;\n    }\n  }\n\n  function updateGrid(loadingTime = 0) {\n    const newTime = (loadingTime - oldTime) * level;\n    oldTime = loadingTime;\n\n    counter += newTime;\n    if (counter > interval) {\n      userDown();\n    }\n\n    grid.paintGrid();\n    if (!isPaused) requestAnimationFrame(updateGrid);\n  }\n\n  const colors = [\n    null,\n    \"#FF0D72\",\n    \"#0DC2FF\",\n    \"#0DFF72\",\n    \"#F538FF\",\n    \"#FF8E0D\",\n    \"#FFE138\",\n    \"#3877FF\",\n  ];\n\n  const matrixGrid = createGrid(12, 20)\n\n  const user = {\n    pos: { x: 4, y: 0},\n    matrix: null,\n    score: 0\n  }\n\n  // document.addEventListener('keydown', event => {\n  //   if (event.keyCode === 37) {\n  //     userMove(-1);\n  //   } else if (event.keyCode === 39) {\n  //     userMove(1);\n  //   } else if (event.keyCode === 40) {\n  //     userDown();\n  //   } else if (event.keyCode === 81) {\n  //     userRotate(-1);\n  //   } else if (event.keyCode === 87) {\n  //     userRotate(1);\n  //   } else if (event.keyCode === 80) {\n  //     userPause();\n  //   }\n  // })\n\n  function keyPresses(event) {\n    if (event.keyCode === 37) {\n      userMove(-1);\n      let sfx = new Audio(\"../assets/sound_effects/Sfx/SFx.mp3\");\n      sfx.play();\n    } else if (event.keyCode === 39) {\n      userMove(1);\n      let sfx = new Audio(\"../assets/sound_effects/Sfx/SFx.mp3\");\n      sfx.play();\n    } else if (event.keyCode === 40) {\n      userDown();\n    } else if (event.keyCode === 81) {\n      userRotate(-1);\n    } else if (event.keyCode === 87) {\n      userRotate(1);\n    } \n  }\n\n  document.addEventListener('keydown', keyPresses);\n\n  function addScore() {\n    document.getElementById(\"score\").innerText = user.score;\n  }\n\n  const grid = new Grid(canvas, matrix, user, matrixGrid);\n\n\n  document.addEventListener('keydown', () => {\n    if (event.key === 'Enter') {\n      backgroundMusic.volume = 0.2;\n      backgroundMusic.play();\n      backgroundMusic.onended = () => {\n        songIdx += 2;\n        console.log(\"Song ended\")\n        backgroundMusic.src = `../assets/sound_effects/level1/TetrisA-3.mp3`\n        backgroundMusic.play();\n      };\n      userReset();\n      addScore();\n      updateGrid(); \n    }\n  });\n  \n  window.matrixGrid = matrixGrid;\n})"],"sourceRoot":""}